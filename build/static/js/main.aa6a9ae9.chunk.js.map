{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseurl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","Math","random","placeholder","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAaeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,kBACA,WAEN,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCN1CK,EAAU,sDAuBD,EArBA,WACX,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAChBC,GAAI,IACJP,QAAS,mCACTQ,KAAM,2BACNV,WAAW,GAEf,OAAOK,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEZ,OADgBT,IAAMU,KAAKZ,EAASW,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAAab,EAAb,YAAwBK,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SChBvCK,G,MAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKlB,UAAU,QAAf,SACKkB,MAKPC,EAAS,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2GA2FGC,EAtFH,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEWF,mBAAS,IAFpB,mBAEZG,EAFY,KAEHC,EAFG,OAGWJ,oBAAS,GAHpB,mBAGZK,EAHY,KAGHC,EAHG,OAIqBN,mBAAS,MAJ9B,mBAIZO,EAJY,KAIEC,EAJF,KAMnBC,qBAAU,WACNC,QAAQC,IAAI,UACZC,IAEK5B,MAAK,SAAA6B,GACFX,EAASW,QAElB,IAEH,IAyCMC,EAAcT,EACdJ,EACAA,EAAMc,QAAO,SAAA7C,GAAI,OAAuB,IAAnBA,EAAKG,aAEhC,OACI,gCACI,uCACA,cAAC,EAAD,CAAcmB,QAASe,IACvB,8BACI,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAGtC,6BACKS,EAAYE,KAAI,SAAA9C,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBAtCX,SAACW,GACxB,IAAMZ,EAAO+B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,KAAOA,KAChCqC,EAAW,2BAAQjD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDuC,EACY9B,EAAIqC,GACXnC,MAAK,SAAAoC,GACFlB,EAASD,EAAMe,KAAI,SAAA9C,GAAI,OAAIA,EAAKY,KAAOA,EAAKsC,EAAelD,SAE9DmD,OAAM,SAAAC,GACHd,EAAgB,SAAD,OACFtC,EAAKK,QADH,sCAGfgD,YAAW,WACPf,EAAgB,QACjB,KACHN,EAASD,EAAMc,QAAO,SAAAG,GAAC,OAAIA,EAAEpC,KAAOA,SAsBJ0C,CAAmBtD,EAAKY,MAF3CZ,EAAKY,SAKtB,uBAAM2C,SA9DE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACfrD,QAAS4B,EACTpB,KAAM,IAAI8C,KACVxD,UAAWyD,KAAKC,SAAW,IAG/BnB,EACYgB,GACP5C,MAAK,SAAAoC,GACFlB,EAASD,EAAMd,OAAOiC,IACtBhB,EAAW,QAkDf,UACI,uBAAO4B,YAAY,aAAaC,MAAO9B,EAAS+B,SA/CnC,SAACR,GACtBhB,QAAQC,IAAIe,EAAMS,OAAOF,OACzB7B,EAAWsB,EAAMS,OAAOF,UA8ChB,wBAAQG,KAAK,SAAb,qBAEJ,cAAC,EAAD,QC9GZC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa6a9ae9.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'remove favorite'\n        : 'favorite'\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","import axios from 'axios'\n\nconst baseurl = 'https://shielded-cove-53784.herokuapp.com/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseurl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseurl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseurl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nimport './index.css'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\nconst App = (props) => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(() => {\n        console.log('effect')\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, [])\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            date: new Date(),\n            important: Math.random() < 0.5,\n        }\n\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote))\n                setNewNote('')\n            })\n    }\n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportanceOf = (id) => {\n        const note = notes.find(n => n.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id === id ? returnedNote : note))\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n                setNotes(notes.filter(n => n.id !== id))\n            })\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important === true)\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'favorites' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map(note =>\n                    <Note\n                        key={note.id}\n                        note={note}\n                        toggleImportance={() => toggleImportanceOf(note.id)} />\n                )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input placeholder='a new note' value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">save</button>\n            </form>\n            <Footer />\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}